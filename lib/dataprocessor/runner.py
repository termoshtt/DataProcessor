# -*- coding: utf-8 -*-

import os
import tempfile
import subprocess
from daemon import DaemonContext

from .utility import check_directory


def sync(execute_dir, args):
    """ Execute as a subprocess (wait for finish)

    Parameters
    ----------
    execute_dir : str
        path of directory where the command is executed
    args : [str]
        arguments
    """
    pwd = os.curdir
    os.chdir(execute_dir)
    subprocess.check_call(args)
    os.chdir(pwd)


def daemon(execute_dir, args):
    """ Execute as a daemon process

    Parameters
    ----------
    execute_dir : str
        path of directory where the command is executed
    args : [str]
        arguments
    """
    with DaemonContext(working_directory=execute_dir):
        subprocess.check_call(args)


atnow_template = """#!/bin/sh
# Automatically generated by dataprocessor.runner.atnow
cd {path}
{args}
"""


def atnow(execute_dir, args):
    """ Execute command using at (POSIX)

    Parameters
    ----------
    execute_dir : str
        path of directory where the command is executed
    args : [str]
        arguments
    """
    path = check_directory(execute_dir)
    tmp = tempfile.NamedTemporaryFile()
    tmp.write(atnow_template.format(path=path, args=" ".join(args)))
    tmp.flush()
    subprocess.check_call(['at', 'now', '-f', tmp.name])


runners = {
    "sync": sync,
    "daemon": daemon,
    "atnow": atnow,
}
